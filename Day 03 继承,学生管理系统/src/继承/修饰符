1.权限修饰符
权限低——>高
public（完全公开）——>protected（同包中和子类可见）——>默认（同一个包中可见）——>private（私有，同一个类才可见）

2.状态修饰符，final最终态和static静态

final修饰的方法不可被重写，表示已经是最后状态的方法了
tips：当重写父类方法时，可以加@Override提示此方法为重写方法
final修饰成员变量时，就不可再修改其值了，类似于c语言中的const
final修饰类名时，其不可再有子类
final修饰局部变量时，当变量时基本类型，其数据值不可再发生改变，
                  当变量为引用类型时，引用类型的地址值不可以改变，但地址里面内容可改变

static修饰的成员变量和成员方法属于整个类，而不单独属于某个实例对象，可以直接用类名.方法（）调用

3.包，import 包名.类名;


