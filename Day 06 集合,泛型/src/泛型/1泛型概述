泛型：本质是参数化类型，所操作的数据类型被指定为一个参数
将类型由原来的具体的类型参数化，在调用时传入具体的类型
这种参数类型可以用在类，方法，接口中，分别被称为泛型类，泛型方法，泛型接口

泛型定义格式：
<类型1>：指定一种类型的格式，这里类型可以看成是形参
<类型1，类型2>指定多种类型的格式，多种类型之间用逗号隔开。这里的类型可以看成是形参
将来调用的时候给定的类型可以看成是实参，并且实参的类型只能是引用数据类型

泛型的好处：把运行时期的问题提前到了编译期间，避免强制类型转换而报错
范例：public class 类名<T>{  //此处T可以随便写成任意标识，常用的T E K V都可以标识泛型
    private T t;

    public T getT(){
        return t;
    }

    public void setT(T t){
        this.t=t;
    }
}

创建对象时：
类名<Integer> 对象名=new 类名<>();

同样，接口也可以是泛型接口，在指定接口后面加上<T>就可以

